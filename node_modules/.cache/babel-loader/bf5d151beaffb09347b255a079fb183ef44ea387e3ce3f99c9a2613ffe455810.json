{"ast":null,"code":"var _jsxFileName = \"/Users/Ogaga/meme-app/src/components/inputboxes.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"../components/memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  /**\n   * Challenge: Update our state to save the meme-related\n   * data as an object called `meme`. It should have the\n   * following 3 properties:\n   * topText, bottomText, randomImage.\n   * \n   * The 2 text states can default to empty strings for now,\n   * amd randomImage should default to \"http://i.imgflip.com/1bij.jpg\"\n   * \n   * Next, create a new state variable called `allMemeImages`\n   * which will default to `memesData`, which we imported above\n   * \n   * Lastly, update the `getMemeImage` function and the markup \n   * to reflect our newly reformed state object and array in the\n   * correct way.\n   */\n\n  // const [memeImage, setMemeImage] = React.useState(\"http://i.imgflip.com/1bij.jpg\")\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages] = React.useState(memesData);\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"\",\n      src: meme.randomImage,\n      className: \"meme--image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Meme, \"4g63g2Y++fQRJkTEJ+cvzRDXEfE=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImages","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","url","prevMeme"],"sources":["/Users/Ogaga/meme-app/src/components/inputboxes.js"],"sourcesContent":["import React from \"react\"\nimport memesData from \"../components/memesData\"\n\nexport default function Meme() {\n    /**\n     * Challenge: Update our state to save the meme-related\n     * data as an object called `meme`. It should have the\n     * following 3 properties:\n     * topText, bottomText, randomImage.\n     * \n     * The 2 text states can default to empty strings for now,\n     * amd randomImage should default to \"http://i.imgflip.com/1bij.jpg\"\n     * \n     * Next, create a new state variable called `allMemeImages`\n     * which will default to `memesData`, which we imported above\n     * \n     * Lastly, update the `getMemeImage` function and the markup \n     * to reflect our newly reformed state object and array in the\n     * correct way.\n     */\n    \n    // const [memeImage, setMemeImage] = React.useState(\"http://i.imgflip.com/1bij.jpg\")\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemeImages] = React.useState(memesData)\n    \n    \n    function getMemeImage() {\n        const memesArray = allMemeImages.data.memes\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\n        const url = memesArray[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <img alt=\"\" src={meme.randomImage} className=\"meme--image\" />\n        </main>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAA;AAE/C,eAAe,SAASC,IAAI,GAAG;EAAA;EAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC;IACnCC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,CAAC,GAAGT,KAAK,CAACK,QAAQ,CAACJ,SAAS,CAAC;EAGjD,SAASS,YAAY,GAAG;IACpB,MAAMC,UAAU,GAAGF,aAAa,CAACG,IAAI,CAACC,KAAK;IAC3C,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,UAAU,CAACO,MAAM,CAAC;IAClE,MAAMC,GAAG,GAAGR,UAAU,CAACG,YAAY,CAAC,CAACK,GAAG;IACxCf,OAAO,CAACgB,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACXZ,WAAW,EAAEW;IACjB,CAAC,CAAC,CAAC;EAEP;EAEA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,UAAU;QACtB,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,aAAa;QACzB,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QACI,SAAS,EAAC,cAAc;QACxB,OAAO,EAAET,YAAa;QAAA,UACzB;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,eACN;MAAK,GAAG,EAAC,EAAE;MAAC,GAAG,EAAEP,IAAI,CAACK,WAAY;MAAC,SAAS,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEf;AAAC,GA7DuBN,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}